...(keySet KeySet, content []byte)


List<X509Certificate> certList = new ArrayList<>()
    .add(keySet.publicKey);

ContentSigner sha1Signer = new JcaContentSignerBuilder(keySet.signatureAlgorithm)
    .setProvider("SC")
    .build(keySet.privateKey);

DigestCalculatorProvider digestCalculatorProvider = new JcaDigestCalculatorProviderBuilder()
    .setProvider("SC")
    .build();

SignerInfoGenerator signerInfoGenerator = new JcaSignerInfoGeneratorBuilder(digestCalculatorProvider)
    .setDirectSignature(true)
    .build(sha1Signer, keySet.publicKey);

let gen = new CMSSignedDataGenerator()
    .addSignerInfoGenerator(signerInfoGenerator)
    .addCertificates(new JcaCertStore(certList));

CMSTypedData msg = new CMSProcessableByteArray(content);
return gen.generate(msg, false).toASN1Structure().getEncoded("DER");
